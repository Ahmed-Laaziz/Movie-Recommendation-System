Query for recommendation

We use Cpyher Query Language to extract data from neo4j database.

Cypher is a declarative graph query language that allows for expressive and efficient querying and updating of a property graph. Cypher is a relatively simple but still very powerful language. Very complicated database queries can easily be expressed through Cypher.(wikipedia)

Let’s review a user and check movies which are watched by him

MATCH path = (u:Users)-[:WATCHED]->(m1:Movies)
WHERE u.userId =~’4'
RETURN u.userId, m1.title, m1.rating_mean

MATCH path = (u:Users)-[:FAVORITE]->(g:Genres)
WHERE u.userId =~’4'
RETURN u.userId, g.genres

MATCH (u1:Users)-[:WATCHED]->(m3:Movies)
WHERE u1.userId =~’1905'
WITH [i in m3.movieId | i] as movies
MATCH path = (u:Users)-[:WATCHED]->(m1:Movies)-[s:SIMILAR]->(m2:Movies),
(m2)-[:GENRES]->(g:Genres),
(u)-[:FAVORITE]->(g)
WHERE u.userId =~’1905' and not m2.movieId in movies
RETURN distinct u.userId as userId, g.genres as genres, 
m2.title as title, m2.rating_mean as rating
ORDER BY m2.rating_mean descending
LIMIT 5
